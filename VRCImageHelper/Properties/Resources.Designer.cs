//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace VRCImageHelper.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VRCImageHelper.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   In order to save the file with this name in the original directory, it is necessary to overwrite the original file, but the &quot;Overwrite destination file&quot; is disabled.
        ///(Rather than allowing overwriting, it is recommended to specify a destination folder. When starts this app, if the image is in the same location as the original file, the tag write process is executed again) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ConfigWindowOverwriteNotAllowedMessage {
            get {
                return ResourceManager.GetString("ConfigWindowOverwriteNotAllowedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   VRC Image Helper / Config に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ConfigWindowOverwriteNotAllowedTitle {
            get {
                return ResourceManager.GetString("ConfigWindowOverwriteNotAllowedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FFMpeg is required to compress with this format. 
        ///Do you want to download it? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FFMpegDownloadMessage {
            get {
                return ResourceManager.GetString("FFMpegDownloadMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   VRC Image Helper / Download FFMpeg に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FFMpegDownloadTitle {
            get {
                return ResourceManager.GetString("FFMpegDownloadTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error: Something went wrong
        ///(Click this to copy the error) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotifyError {
            get {
                return ResourceManager.GetString("NotifyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error: Exiftool exited with error
        ///(Click this to check the output) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotifyErrorExiftool {
            get {
                return ResourceManager.GetString("NotifyErrorExiftool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error: ffmpeg exited with error
        ///(Click this to check the output) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotifyErrorFFMpeg {
            get {
                return ResourceManager.GetString("NotifyErrorFFMpeg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error: Destination directory could not find and also create に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotifyErrorImageProcessCantCreateDirectory {
            get {
                return ResourceManager.GetString("NotifyErrorImageProcessCantCreateDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error: Could not delete original file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotifyErrorImageProcessCantDeleteOriginal {
            get {
                return ResourceManager.GetString("NotifyErrorImageProcessCantDeleteOriginal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error: Could not find the result file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotifyErrorImageProcessExiftoolResultNotFound {
            get {
                return ResourceManager.GetString("NotifyErrorImageProcessExiftoolResultNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Error: Destination file has exist に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotifyErrorImageProcessFileExist {
            get {
                return ResourceManager.GetString("NotifyErrorImageProcessFileExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Do you want to retroactively perform processing on past VRChat logs?
        ///OSC messages will discard until complete that. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScanAllRestartMessage {
            get {
                return ResourceManager.GetString("ScanAllRestartMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   VRC Image Helper / Past logs に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScanAllRestartTitle {
            get {
                return ResourceManager.GetString("ScanAllRestartTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found VRChat Exif Writer, is &quot;old version&quot; of this application. Can I uninstall it? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SetupRemoveVEWMessage {
            get {
                return ResourceManager.GetString("SetupRemoveVEWMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Re-login to Windows is required to complete uninstalling.
        ///Please logout and login manually. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SetupRemoveVEWRestartRequired {
            get {
                return ResourceManager.GetString("SetupRemoveVEWRestartRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   VRC Image Helper / Uninstall VRChat Exif Writer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SetupRemoveVEWTitle {
            get {
                return ResourceManager.GetString("SetupRemoveVEWTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Exit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ToolbarExit {
            get {
                return ResourceManager.GetString("ToolbarExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Process past logs に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ToolbarScanAll {
            get {
                return ResourceManager.GetString("ToolbarScanAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Processing {Progress}/{Total} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ToolbarScanAllProgress {
            get {
                return ResourceManager.GetString("ToolbarScanAllProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ToolbarSettings {
            get {
                return ResourceManager.GetString("ToolbarSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   VRC Image Helper に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ToolbarTitle {
            get {
                return ResourceManager.GetString("ToolbarTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Run when computer starts に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ToolbarToggleAutoStart {
            get {
                return ResourceManager.GetString("ToolbarToggleAutoStart", resourceCulture);
            }
        }
    }
}
