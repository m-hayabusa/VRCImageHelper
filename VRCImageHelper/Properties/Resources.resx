<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfigWindowOverwriteNotAllowedMessage" xml:space="preserve">
    <value>In order to save the file with this name in the original directory, it is necessary to overwrite the original file, but the "Overwrite destination file" is disabled.
(Rather than allowing overwriting, it is recommended to specify a destination folder. When starts this app, if the image is in the same location as the original file, the tag write process is executed again)</value>
  </data>
  <data name="ConfigWindowOverwriteNotAllowedTitle" xml:space="preserve">
    <value>VRC Image Helper / Config</value>
  </data>
  <data name="FFMpegDownloadMessage" xml:space="preserve">
    <value>FFMpeg is required to compress with this format. 
Do you want to download it?</value>
  </data>
  <data name="FFMpegDownloadTitle" xml:space="preserve">
    <value>VRC Image Helper / Download FFMpeg</value>
  </data>
  <data name="NotifyError" xml:space="preserve">
    <value>Error: Something went wrong
(Click this to copy the error)</value>
  </data>
  <data name="NotifyErrorExiftool" xml:space="preserve">
    <value>Error: Exiftool exited with error
(Click this to check the output)</value>
  </data>
  <data name="NotifyErrorFFMpeg" xml:space="preserve">
    <value>Error: ffmpeg exited with error
(Click this to check the output)</value>
  </data>
  <data name="NotifyErrorImageProcessCantCreateDirectory" xml:space="preserve">
    <value>Error: Destination directory could not find and also create</value>
  </data>
  <data name="NotifyErrorImageProcessCantDeleteOriginal" xml:space="preserve">
    <value>Error: Could not delete original file</value>
  </data>
  <data name="NotifyErrorImageProcessExiftoolResultNotFound" xml:space="preserve">
    <value>Error: Could not find the result file</value>
  </data>
  <data name="NotifyErrorImageProcessFileExist" xml:space="preserve">
    <value>Error: Destination file has exist</value>
  </data>
  <data name="ScanAllRestartMessage" xml:space="preserve">
    <value>Do you want to retroactively perform processing on past VRChat logs?
OSC messages will discard until complete that.</value>
  </data>
  <data name="ScanAllRestartTitle" xml:space="preserve">
    <value>VRC Image Helper / Past logs</value>
  </data>
  <data name="SetupRemoveVEWMessage" xml:space="preserve">
    <value>Found VRChat Exif Writer, is "old version" of this application. Can I uninstall it?</value>
  </data>
  <data name="SetupRemoveVEWRestartRequired" xml:space="preserve">
    <value>Re-login to Windows is required to complete uninstalling.
Please logout and login manually.</value>
  </data>
  <data name="SetupRemoveVEWTitle" xml:space="preserve">
    <value>VRC Image Helper / Uninstall VRChat Exif Writer</value>
  </data>
  <data name="ToolbarExit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ToolbarScanAll" xml:space="preserve">
    <value>Process past logs</value>
  </data>
  <data name="ToolbarScanAllProgress" xml:space="preserve">
    <value>Processing {Progress}/{Total}</value>
  </data>
  <data name="ToolbarSettings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ToolbarTitle" xml:space="preserve">
    <value>VRC Image Helper</value>
  </data>
  <data name="ToolbarToggleAutoStart" xml:space="preserve">
    <value>Run when computer starts</value>
  </data>
</root>