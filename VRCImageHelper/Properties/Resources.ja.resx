<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfigWindowOverwriteNotAllowedMessage" xml:space="preserve">
    <value>このファイル名で元のディレクトリに保存するためには、元ファイルを上書きする必要がありますが、「保存先にすでに同名のファイルがあるとき、上書きする」がオフになっています。
(上書きを許可するよりも、保存先のフォルダを指定することをおすすめします: このアプリが起動したとき、元のファイルと同じ場所に画像があると、もう一度タグの書き込み処理が実行される)</value>
  </data>
  <data name="ConfigWindowOverwriteNotAllowedTitle" xml:space="preserve">
    <value>VRC Image Helper / 設定</value>
  </data>
  <data name="FFMpegDownloadMessage" xml:space="preserve">
    <value>この形式で圧縮するためにはffmpegが必要です。
ダウンロードしますか？</value>
  </data>
  <data name="FFMpegDownloadTitle" xml:space="preserve">
    <value>VRC Image Helper / ffmpegをダウンロード</value>
  </data>
  <data name="NotifyError" xml:space="preserve">
    <value>エラー: 何らかのエラーが発生しました 
(この通知をクリックしてログをコピーできます)</value>
  </data>
  <data name="NotifyErrorExiftool" xml:space="preserve">
    <value>エラー: Exiftoolが正しく終了しませんでした
(この通知をクリックしてログを確認)</value>
  </data>
  <data name="NotifyErrorFFMpeg" xml:space="preserve">
    <value>エラー: FFMpegが正しく終了しませんでした
(この通知をクリックしてログを確認)</value>
  </data>
  <data name="NotifyErrorImageProcessCantCreateDirectory" xml:space="preserve">
    <value>エラー: 保存先のフォルダが存在せず、かつ作成できませんでした</value>
  </data>
  <data name="NotifyErrorImageProcessCantDeleteOriginal" xml:space="preserve">
    <value>エラー: 元ファイルの削除に失敗しました</value>
  </data>
  <data name="NotifyErrorImageProcessExiftoolResultNotFound" xml:space="preserve">
    <value>エラー: 処理結果のファイルが存在しませんでした</value>
  </data>
  <data name="NotifyErrorImageProcessFileExist" xml:space="preserve">
    <value>エラー: 保存先にファイルがすでに存在します</value>
  </data>
  <data name="ScanAllRestartMessage" xml:space="preserve">
    <value>過去のVRChatのログについて、さかのぼって処理を実行しますか？
処理が終わるまではOSCメッセージが無視されます。</value>
  </data>
  <data name="ScanAllRestartTitle" xml:space="preserve">
    <value>VRC Image Helper / 過去ログ</value>
  </data>
  <data name="SetupRemoveVEWMessage" xml:space="preserve">
    <value>VRChat Exif Writerが見つかりました。これは、実質的にこのソフトの旧バージョンです。VRChat Exif Writerを削除してもよろしいですか？</value>
  </data>
  <data name="SetupRemoveVEWRestartRequired" xml:space="preserve">
    <value>VRChat Exif Writerの削除を実行するために、再ログインが必要です。
手動で再ログインしてください。</value>
  </data>
  <data name="SetupRemoveVEWTitle" xml:space="preserve">
    <value>VRC Image Helper / VRChat Exif Writerの削除</value>
  </data>
  <data name="ToolbarExit" xml:space="preserve">
    <value>終了</value>
  </data>
  <data name="ToolbarScanAll" xml:space="preserve">
    <value>過去ログを処理</value>
  </data>
  <data name="ToolbarScanAllProgress" xml:space="preserve">
    <value>過去ログを処理中: {Progress}/{Total}</value>
  </data>
  <data name="ToolbarSettings" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="ToolbarTitle" xml:space="preserve">
    <value>VRC Image Helper</value>
  </data>
  <data name="ToolbarToggleAutoStart" xml:space="preserve">
    <value>自動起動</value>
  </data>
</root>